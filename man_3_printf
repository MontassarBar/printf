"# _printf man page
."
."
.TH _PRINTF 3 "10 November 2021" "_printf Manuel"

.SH # NAME  _prinf()  print data and format
.SH ""

.B _printf

.SH # SYNOPSIS
.SH "" 
.int _printf(const char *[FORMAT], ...);

.SH # DESCRIPTION Prints ARGUMENT(s) based on FORMAT
.PP
This function writes the output under the control of a format string
that specifieshow subsequent arguments (or arguments accessed via the
variable-length argument facilities of stdarg(3)) are converted for
output.
.PP
If format includes format specifiers (subsequences beginning with %),
the additional arguments following format are formatted and inserted in
the resulting string replacing their respective specifiers.
.PP
The format string is composed of zero or more directives: ordinary
characters (not %), which are copied unchangd to the output stream; and
conversion specifications, each of which results in fetching zero or
more subsequent arguments.
.PD 0
.P
.PD
Each conversion specification is introduced by the % character.
.PD 0
.P
.PD
Each conversion specification is introduced by the % character.
.PD 0
.P
.PD
The arguments must correspond properly with the conversion specifier.
.PP
After the %, the following appear in sequence:
.PP
c The int argument is converted to an unsigned char, and the re-
sulting character is written.
.PP
s The char * argument is expected to be a pointer to an array of
character type (pointer to a string).
Characters from the array are written up to (but not including) a
terminating NUL charac- ter.
.PP
% A
.SS # Example
.RS

_printf("My name is %s and I am %d years old",)
.RE

.SS # Return Value

Upon successful return, these functions return an integer for the number of \
characters printed, which exclude the terminating null byte ('\0').

.SH # "SEE ALSO"
.SH ""

.BR printf(3),


.SH # â€œAUTHOR"
.SH ""

Mouna Ben Ali && Montassar Barbouchi